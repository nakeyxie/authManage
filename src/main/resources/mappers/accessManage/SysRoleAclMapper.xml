<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oct.repository.accessManage.SysRoleAclMapper">
  <resultMap id="BaseResultMap" type="com.oct.entity.accessManage.SysRoleAcl">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="acl_id" jdbcType="INTEGER" property="aclId" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, acl_id, operator, operate_time, operate_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_acl
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role_acl
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.oct.entity.accessManage.SysRoleAcl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role_acl (role_id, acl_id, operator, 
      operate_time, operate_ip)
    values (#{roleId,jdbcType=INTEGER}, #{aclId,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oct.entity.accessManage.SysRoleAcl">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role_acl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="aclId != null">
        acl_id,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="aclId != null">
        #{aclId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oct.entity.accessManage.SysRoleAcl">
    update sys_role_acl
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="aclId != null">
        acl_id = #{aclId,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oct.entity.accessManage.SysRoleAcl">
    update sys_role_acl
    set role_id = #{roleId,jdbcType=INTEGER},
      acl_id = #{aclId,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByRoleId" parameterType="map" resultType="com.oct.dto.response.accessManage.LayUITreeDto">
    SELECT
      a.id as id ,concat(a.name,if(a.status=1,'','(禁用)')) as name, a.acl_module_id as parentId,if( a.id in (SELECT acl_id from sys_role_acl WHERE role_id = #{roleId}),1,0) as checkedNumber
    FROM sys_acl a
  </select>
  <select id="selectAclListByRoleIds" parameterType="map" resultType="int">
    SELECT acl_id
    FROM sys_role_acl
    WHERE role_id IN
      <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">#{roleId}</foreach>
  </select>
  <delete id="deleteByRoleId" parameterType="int" >
    delete from sys_role_acl where role_id = #{roleId}
  </delete>
  <insert id="batchInsert" parameterType="map">
    insert into sys_role_acl (role_id, acl_id, operator, operate_time, operate_ip)
    values
    <foreach collection="roleAclList" item="roleAcl" separator=",">
      (#{roleAcl.roleId}, #{roleAcl.aclId}, #{roleAcl.operator}, #{roleAcl.operateTime}, #{roleAcl.operateIp})
    </foreach>
  </insert>
  <select id="getAclIdListByRoleIdList" parameterType="map" resultType="int">
    SELECT acl_id
    FROM sys_role_acl
    WHERE role_id in
    <foreach collection="roleIdList" item="roleId" open="(" close=")" separator=",">
      #{roleId}
    </foreach>
  </select>
</mapper>